#!/bin/bash
# -*- mode: shellscript -*-
print_usage() {
    echo "llama-serve mymodel.log --port 1234 --hf-repo someone/somemodel:Q9_K_XXXL --n-gpu-layers ...."
}
if [ $# -lt 2 ]; then
    print_usage
    exit 1
fi
echo $1
if [[ $1 != *.log ]]; then
    >&2 echo "Expected .log suffix"
    exit 1
fi
if [ ! -w $(dirname $1)/ ]; then
    >&2 echo "Cannot write to folder of log file?"
    exit 1
fi
mv --backup=numbered $1 $1.bak 
date
if [ -e /tmp/llama-server-stdout-stderr.log ]; then
    mv /tmp/llama-server-stdout-stderr.log /tmp/llama-server-stdout-stderr.log.bak
fi
kill_llama_cpp() {
    if ! kill -0 $1 2>/dev/null; then
        echo "PID=$1 no longer exists, cannot kill llama.cpp"
        return 0
    fi
    kill -SIGINT $1
    kill -SIGINT $1
    echo "Sent SIGINT x2 to PID=$1"
    sleep 0.050s
    if kill -0 $1 2>/dev/null; then
        sleep 0.250s
    else
        echo "Successfully killed llama.cpp"
        return 0
    fi
    if kill -0 $1 2>/dev/null; then
        echo "Sent SIGKILL to $1"
        kill -SIGKILL $1
    fi
}
set -x
/opt/llama.cpp/build/bin/llama-server \
    --log-file $1 \
    "${@:2}" 2>/tmp/llama-server-stdout-stderr.log &
PID=$!
set +x
if kill -0 $PID 2>/dev/null; then
    echo "llama-server started as PID=$PID"
else
    >&2 echo "failed to start llama-server"
    exit 1
fi

trap "kill_llama_cpp $PID" TERM INT EXIT
wait $PID
